{"map":"{\"version\":3,\"sources\":[\"/Users/ronghuazhao/PycharmProjects/site/src/App.js\",\"/Users/ronghuazhao/PycharmProjects/site/src/serviceWorker.js\",\"/Users/ronghuazhao/PycharmProjects/site/src/index.js\"],\"names\":[\"axios\",\"defaults\",\"withCredentials\",\"headers\",\"post\",\"server\",\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"name\",\"age\",\"change\",\"bind\",\"assertThisInitialized\",\"write\",\"read\",\"key\",\"e\",\"setState\",\"defineProperty\",\"target\",\"value\",\"data\",\"console\",\"log\",\"concat\",\"res\",\"get\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"className\",\"onChange\",\"onClick\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"wUAKAA,EAAAA,EAAMC,SAASC,iBAAgB,EAC/BF,EAAAA,EAAMC,SAASE,QAAQC,KAAK,gBAAgB,mBAC5C,IAAMC,EAAS,uBAyDAC,cArDb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAM,CACTC,KAAK,GACLC,IAAI,GAGNT,EAAKU,OAAOV,EAAKU,OAAOC,KAAZV,OAAAW,EAAA,EAAAX,CAAAA,OAAAW,EAAA,EAAAX,CAAAD,KACZA,EAAKa,MAAMb,EAAKa,MAAMF,KAAXV,OAAAW,EAAA,EAAAX,CAAAA,OAAAW,EAAA,EAAAX,CAAAD,KACXA,EAAKc,KAAKd,EAAKc,KAAKH,KAAVV,OAAAW,EAAA,EAAAX,CAAAA,OAAAW,EAAA,EAAAX,CAAAD,KATMA,sEAYXe,EAAIC,GACTb,KAAKc,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GAESc,EAAKC,EAAEG,OAAOC,+JAMnBC,iBAASlB,KAAKI,OAClBe,QAAQC,IAAIF,YAEE7B,EAAAA,EAAMI,KAAN,GAAA4B,OAAc3B,GAASwB,UAAjCI,SAGJH,QAAQC,IAAIE,kQAQEjC,EAAAA,EAAMkC,IAAN,GAAAF,OAAa3B,WAAvB4B,SACJH,QAAQC,IAAIE,sIAGL,IAAAE,EAAAxB,KACP,OACEyB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAA,CAAOE,SAAU,SAAChB,GAAD,OAAMW,EAAKjB,OAAO,OAAOM,MAC1CY,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,QAAA,CAAOE,SAAU,SAAChB,GAAD,OAAMW,EAAKjB,OAAO,MAAMM,MACzCY,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,SAAA,CAAQG,QAAS9B,KAAKU,OAAtB,SACAe,EAAAC,EAAAC,cAAA,SAAA,CAAQG,QAAS9B,KAAKW,MAAtB,gBAhDUoB,EAAAA,WCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\n// import logo from './logo.svg';\\nimport './App.css';\\nimport axios from 'axios'\\n\\naxios.defaults.withCredentials=true;\\naxios.defaults.headers.post['Content-Type']='application/json';\\nconst server = 'http://127.0.01:8000';//这个要写在etc/settings里\\n\\n//https://blog.csdn.net/div_ma/article/details/80436727  react-router-dom\\nclass App extends Component {\\n  constructor(props){\\n    super(props);\\n    this.state={\\n      name:\\\"\\\",\\n      age:0\\n    }\\n\\n    this.change=this.change.bind(this);\\n    this.write=this.write.bind(this);\\n    this.read=this.read.bind(this);\\n  }\\n\\n  change(key,e){\\n    this.setState(\\n        {\\n            [key]:e.target.value\\n        }\\n    );\\n  }\\n\\n  async write(){\\n    let data={...this.state};\\n    console.log(data);\\n    // let res=await axios.post(`${server}/write/`,data);\\n    let res=await axios.post(`${server}`,data);\\n    // let res=await axios.post(``,data);\\n\\n    console.log(res);\\n  }\\n\\n  async read(){\\n    // let params={\\n    //   name:'a'\\n    // }\\n    // let res=await axios.get(`${server}/read/`,{params});\\n    let res=await axios.get(`${server}`);\\n    console.log(res);\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <input onChange={(e)=>(this.change('name',e))}/>\\n        <br />\\n        <input onChange={(e)=>(this.change('age',e))} />\\n        <br />\\n        <button onClick={this.write}>write</button>\\n        <button onClick={this.read}>read</button>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{21:function(e,t,n){e.exports=n(52)},27:function(e,t,n){},31:function(e,t,n){},52:function(e,t,n){\"use strict\";n.r(t);var a=n(1),r=n.n(a),c=n(14),o=n.n(c),i=(n(27),n(3)),s=n.n(i),u=n(15),l=n(7),h=n(5),p=n(16),d=n(17),b=n(19),f=n(18),w=n(20),m=n(2),v=(n(31),n(4)),g=n.n(v);g.a.defaults.withCredentials=!0,g.a.defaults.headers.post[\"Content-Type\"]=\"application/json\";var j=\"http://127.0.01:8000\",O=function(e){function t(e){var n;return Object(p.a)(this,t),(n=Object(b.a)(this,Object(f.a)(t).call(this,e))).state={name:\"\",age:0},n.change=n.change.bind(Object(m.a)(Object(m.a)(n))),n.write=n.write.bind(Object(m.a)(Object(m.a)(n))),n.read=n.read.bind(Object(m.a)(Object(m.a)(n))),n}return Object(w.a)(t,e),Object(d.a)(t,[{key:\"change\",value:function(e,t){this.setState(Object(h.a)({},e,t.target.value))}},{key:\"write\",value:function(){var e=Object(l.a)(s.a.mark(function e(){var t,n;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=Object(u.a)({},this.state),console.log(t),e.next=4,g.a.post(\"\".concat(j),t);case 4:n=e.sent,console.log(n);case 6:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"read\",value:function(){var e=Object(l.a)(s.a.mark(function e(){var t;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g.a.get(\"\".concat(j));case 2:t=e.sent,console.log(t);case 4:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"input\",{onChange:function(t){return e.change(\"name\",t)}}),r.a.createElement(\"br\",null),r.a.createElement(\"input\",{onChange:function(t){return e.change(\"age\",t)}}),r.a.createElement(\"br\",null),r.a.createElement(\"button\",{onClick:this.write},\"write\"),r.a.createElement(\"button\",{onClick:this.read},\"read\"))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(O,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[21,2,1]]]);","extractedComments":[]}